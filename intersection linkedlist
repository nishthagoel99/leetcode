/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB)
{
    struct ListNode *curA;
    struct ListNode *curB;
    curA = headA;
    curB = headB;
    int countA=0,countB=0,diff,i=0;
    while(curA!=NULL){
        curA=curA->next;
        countA++;
    }
     while(curB!=NULL){
        curB=curB->next;
        countB++;
    }
     curA = headA;
    curB = headB;
    
   if(countA>countB){
       diff= countA-countB;
        while(i!=diff){
        curA = curA->next;
        i++;
         }
   }
    
    else{
        diff = countB-countA;
         while(i!=diff){
        curB = curB->next;
        i++;
         }
    }
   
    while(curA && curB && curA!=curB){
        curA = curA->next;
        curB = curB->next;
    }
    if(curA==curB){
        return curA;
    }
    return NULL;
}
